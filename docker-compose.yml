# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker compose build
#      Start app: docker compose up app
# Start database: docker compose up db
# Run migrations: docker compose run migrate
#       Stop all: docker compose down (add -v to wipe db)
#

services:
  api:
    image: sunroof-api:latest
    build:
      context: sunroof-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      replicas: 3
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
  migrate:
    image: sunroof-api:latest
    build:
      context: sunroof-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
  revert:
    image: sunroof-api:latest
    build:
      context: sunroof-api
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
  ui:
    image: sunroof-ui:latest
    build:
      context: sunroof-ui
    depends_on:
      - api
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - '80:80'

